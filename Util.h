////  Util.h//  SWGameLib//////  Copyright (c) 2010 Sangwoo Im////  Permission is hereby granted, free of charge, to any person obtaining a copy//  of this software and associated documentation files (the "Software"), to deal//  in the Software without restriction, including without limitation the rights//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell//  copies of the Software, and to permit persons to whom the Software is//  furnished to do so, subject to the following conditions:////  The above copyright notice and this permission notice shall be included in//  all copies or substantial portions of the Software.////  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN//  THE SOFTWARE.//  //  Created by Sangwoo Im on 3/16/10.//  Copyright 2010 Sangwoo Im. All rights reserved.//#import <Foundation/Foundation.h>#import "CCSpriteFrame.h"/** * This class provides helper methods to remove some repetitive work that * needs to be done, otherwise. All methods do not introduce new autorelease pool * it is caller's responsibility to manage autoreleased objects that are created * in these methods. */@interface Util :          NSObject {}/** * Returns CCAnimation object with the given name, action, frameCount, and delay. * * Animation frame names are composed as [name]_[action]_[two digit counter].png. * This is a name form that is used in cocos2d for iphone tutorial on the official * wiki. * * @param name Name of animation * @param action Action of action * @param count The frame count of the given animation * @param time  Time to indicate how long each frame should be shown. * @return animation object. */+(CCAnimation *)animationWithName:(NSString *)name                           action:(NSString *)action                       frameCount:(NSUInteger)count                            delay:(CGFloat)time;/** * Loads game data into memory. If the app's documents directory doesn't contain  * the game data, it will be copied first before loading. To use this method, * AppDelegate class must have a property called 'gameData' as NSMutableDictionary. */+(void)loadGameData;/** * Writes the current game data into the documents directory. */+(void)saveGameData;/** * Loads a property list file as level data into a dictionary object. * * @param name Name of the property list. It must be only the name. the extension, *             ".plist" will be automatically added. * @return level data dictionary from plist file. */+(NSDictionary *)levelDataWithName:(NSString *)name;/** * Returns the AppDelegate's gameData dictionary. * * @return game data dictionary */+(NSMutableDictionary *)gameData;/** * Tilts an OpenGL plane (Quad) which is a cocos2d screen. * * @param target A node to tilt. * @param angle A degree in radians to tilt */+(void)tiltY3DwithNode:(CCNode *)target angle:(CGFloat)angle;/** * Returns the bundle version, which exists in the default Info.plist. * * @return bundle version string. */+(NSString *)bundleVersion;@end