////  SWDatagram.h//  SWGameLib////  Copyright (c) 2010 Sangwoo Im////  Permission is hereby granted, free of charge, to any person obtaining a copy//  of this software and associated documentation files (the "Software"), to deal//  in the Software without restriction, including without limitation the rights//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell//  copies of the Software, and to permit persons to whom the Software is//  furnished to do so, subject to the following conditions:////  The above copyright notice and this permission notice shall be included in//  all copies or substantial portions of the Software.////  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN//  THE SOFTWARE.//  ////  Created by Sangwoo Im on 9/28/10.//  Copyright 2010 Sangwoo Im. All rights reserved.//#import <Foundation/Foundation.h>#import "chipmunk.h"/** * Application level UDP datagram packet. This class is meant to be used * for small chunk of data with the same size to be delivered, minimizing * delay. You can define different static length for each tasks by overriding * this method.  * * This is mainly used by SWNetworkObjectManager to synchronize object states  * within the library. */@interface SWDatagram : NSObject {    NSTimeInterval _timeStamp;    NSData         *_userData;}/** * Initializes the packet with a given data * @param data * @return the initialized packet object. */-(id)initWithData:(NSData *)data;/** * Determines if this packet can be accepted or discarded. *  * @param latestUpdateTime time stamp when the last update was made. * @return YES if it is valid, NO if it is invalid. */-(BOOL)isValid:(NSTimeInterval)latestUpdateTime;/** * Returns the packet data to be sent via AsyncUdpSocket object. *  * @param NSData object */-(NSData *)packet;@end/** * Object state change datagram. */@interface SWObjectStateDatagram : SWDatagram {    CGFloat    _angle, _angularVelocity;    CGPoint    _position, _linearVelocity;    NSUInteger _objectID;}/** * objectID */@property (nonatomic, assign) NSUInteger objectID;/** * force vector */@property (nonatomic, assign) CGPoint force;/** * linear velocity */@property (nonatomic, assign) CGPoint linearVelocity;/** * angular velocity */@property (nonatomic, assign) CGFloat angularVelocity;/** * angle */@property (nonatomic, assign) CGFloat angle;/** * position */@property (nonatomic, assign) CGPoint position;@end